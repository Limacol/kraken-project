/* tslint:disable */
/* eslint-disable */
/**
 * kraken
 * The core component of kraken-project
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: git@omikron.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { SimpleQueryUnhashedResult } from './SimpleQueryUnhashedResult';
import {
    SimpleQueryUnhashedResultFromJSON,
    SimpleQueryUnhashedResultFromJSONTyped,
    SimpleQueryUnhashedResultToJSON,
} from './SimpleQueryUnhashedResult';

/**
 * 
 * @export
 * @interface SourceAttackResultOneOf3
 */
export interface SourceAttackResultOneOf3 {
    /**
     * 
     * @type {string}
     * @memberof SourceAttackResultOneOf3
     */
    attackType: SourceAttackResultOneOf3AttackTypeEnum;
    /**
     * The [`AttackType::QueryUnhashed`] and its results
     * @type {Array<SimpleQueryUnhashedResult>}
     * @memberof SourceAttackResultOneOf3
     */
    results: Array<SimpleQueryUnhashedResult>;
}


/**
 * @export
 */
export const SourceAttackResultOneOf3AttackTypeEnum = {
    QueryDehashed: 'QueryDehashed'
} as const;
export type SourceAttackResultOneOf3AttackTypeEnum = typeof SourceAttackResultOneOf3AttackTypeEnum[keyof typeof SourceAttackResultOneOf3AttackTypeEnum];


/**
 * Check if a given object implements the SourceAttackResultOneOf3 interface.
 */
export function instanceOfSourceAttackResultOneOf3(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "attackType" in value;
    isInstance = isInstance && "results" in value;

    return isInstance;
}

export function SourceAttackResultOneOf3FromJSON(json: any): SourceAttackResultOneOf3 {
    return SourceAttackResultOneOf3FromJSONTyped(json, false);
}

export function SourceAttackResultOneOf3FromJSONTyped(json: any, ignoreDiscriminator: boolean): SourceAttackResultOneOf3 {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'attackType': json['attack_type'],
        'results': ((json['results'] as Array<any>).map(SimpleQueryUnhashedResultFromJSON)),
    };
}

export function SourceAttackResultOneOf3ToJSON(value?: SourceAttackResultOneOf3 | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'attack_type': value.attackType,
        'results': ((value.results as Array<any>).map(SimpleQueryUnhashedResultToJSON)),
    };
}

